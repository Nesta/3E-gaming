<?php

use Drupal\file\Entity\File;

/**
 * @file
 * Contains threeecsgo_search.module.
 */

/**
 * Implements hook_user_view().
 */
function threeecsgo_search_user_view($account, $view_mode, $langcode) {
  if ($account['#user']->getUsername() != "admin") {
    $username = $account['#user']->get('name')->value;

    $user = user_load_by_name($username);
  }

  if ($user != null) {
    $url_api_steam_1 = "https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v2/?key=28ECE97465C977305C7D06CBBA0DE695&steamids=" . $user->get('steamid')->value;
    $content_url_1 = file_get_contents($url_api_steam_1);
    $json_steam_data = json_decode($content_url_1);

    if ($json_steam_data == null) {
      $url_api_steam_1 = "https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v2/?key=6C8548C8E9A4AD096820E41BB1252B27&steamids=" . $user->get('steamid')->value;
      $content_url_1 = file_get_contents($url_api_steam_1);
      $json_steam_data = json_decode($content_url_1);
    }

    $personaname = $json_steam_data->response->players[0]->personaname;

    $username_drupal = strtolower(str_replace(' ', '', preg_replace('([^A-Za-z0-9])', '',$personaname)));

    $realname = $json_steam_data->response->players[0]->realname;
    $primaryclanid = $json_steam_data->response->players[0]->primaryclanid;
    $avatar = $json_steam_data->response->players[0]->avatarfull;
    $tmp = 'public://tmp/avatar.jpeg';
    file_put_contents($tmp, file_get_contents($avatar));

    $url_api_steam_2 = "http://api.steampowered.com/ISteamUserStats/GetUserStatsForGame/v0002/?appid=730&key=28ECE97465C977305C7D06CBBA0DE695&steamid=" . $user->get('steamid')->value;
    $content_url_2 = file_get_contents($url_api_steam_2);
    $json_steam_stats = json_decode($content_url_2);

    if ($json_steam_stats == null) {
      $url_api_steam_2 = "http://api.steampowered.com/ISteamUserStats/GetUserStatsForGame/v0002/?appid=730&key=6C8548C8E9A4AD096820E41BB1252B27&steamid=" . $user->get('steamid')->value;
      $content_url_2 = file_get_contents($url_api_steam_2);
      $json_steam_stats = json_decode($content_url_2);
    }

    $stats = $json_steam_stats->playerstats->stats;

    $user->{'personaname'}->setValue($personaname);
    $user->setUsername($username_drupal);
    $user->{'primaryclanid'}->setValue($primaryclanid);

    if ($realname != NULL) {
      $user->{'realname'}->setValue($realname);
    }
    else {
      $user->{'realname'}->setValue('No name');
    }

    // Create file object from a locally copied file.
    $uri = file_unmanaged_copy($avatar, 'public://avatars/' . $user->get('steamid')->value . '.jpg', FILE_EXISTS_REPLACE);
    $file = File::Create([
      'uri' => $uri,
    ]);
    $file->save();

    // Attach file in node.
    $user->avatarfull->setValue([
      'target_id' => $file->id(),
    ]);

    foreach ($stats as $stat) {
      if($stat->name == "total_deaths" or $stat->name == "total_kills" or $stat->name == "total_time_played"
        or $stat->name == "total_wins" or $stat->name == "total_kills_headshot" or $stat->name == "total_mvps"
        or $stat->name == "total_rounds_played" or $stat->name == "total_shots_fired" or $stat->name == "total_shots_hit") {
        if ( $stat->name == "total_time_played" ) {
          $user->{$stat->name}->setValue(($stat->value/60)/60);
        } else {
          $user->{$stat->name}->setValue($stat->value);
        }
      }
    }

    $user->save();
  }
}
